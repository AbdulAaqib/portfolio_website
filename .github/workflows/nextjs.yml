# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    # Run all `run:` steps inside portfolio/ so Next.js sees your pages/
    defaults:
      run:
        working-directory: portfolio  # :contentReference[oaicite:0]{index=0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4       # check out your code :contentReference[oaicite:1]{index=1}

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager" >&2
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}  # caches your deps :contentReference[oaicite:2]{index=2}

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next      # injects basePath & disables SSR image optimization :contentReference[oaicite:3]{index=3}

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/[jt]s', '**/[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
          # speeds up rebuilds :contentReference[oaicite:4]{index=4}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}  # npm ci / yarn install :contentReference[oaicite:5]{index=5}

      - name: Build & export with Next.js
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} next build
          ${{ steps.detect-package-manager.outputs.runner }} next export
        # outputs static files to portfolio/out :contentReference[oaicite:6]{index=6}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: portfolio/out               # point to your exported folder :contentReference[oaicite:7]{index=7}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4    # publish to ghâ€‘pages branch under the hood :contentReference[oaicite:8]{index=8}
